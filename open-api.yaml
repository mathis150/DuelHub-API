openapi: 3.0.3
info:
  title: DuelHub-API
  description: This API manage a FGC, a wiki, and a forum.
  contact:
    email: api.sav@duelhub.net
  version: 1.0.0
servers:
  - url: "{protocol}://{server}"
    variables:
      protocol:
        enum:
          - https
          - http
        default: https
      server:
        enum:
          - localhost:3000
        default: localhost:3000
tags:
  - name: User
    description: manage relation of user and user infos
  - name: Message
    description: get and modify messages
  - name: Room
    description: create rooms, manage members and get the messages inside
  - name: Game
    description: add and modify game infos
  - name: Auth
    description: login and register user
paths:

#! User

  /User/{uuid_user}:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200UserData'
    
    delete:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the user to delete
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    
  /user/{uuid_user}/details:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200UserDataDetails'

  /user/{uuid_user}/friendlist:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserFriendList200'

  /user/{uuid_user}/favoritelist:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserFavoriteList200'

  /user/{uuid_user}/gamelist:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserGameList200'

  /user/{uuid_user}/roomlist:
    get:
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserRoomList200'

  /user/search/{username}:
    get:
      tags:
        - User
      parameters:
        - name: username
          in: path
          description: the username of the desired user
          required: true
          schema:
            type: string
            example: Kentin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200UserData'  

  /user/{uuid_user}/favorite/{uuid_favorite}:
    post:
      description: add favorite to a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_favorite
          in: path
          description: the uuid of the user to add to favorite
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    delete:
      description: remove favorite from a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_favorite
          in: path
          description: the uuid of the user to remove from favorite
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /user/{uuid_user}/friend/{uuid_friend}:
    post:
      description: add a friend to a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_friend
          in: path
          description: the uuid of the user to add to friend
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    delete:
      description: remove a friend from a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_friend
          in: path
          description: the uuid of the user to remove from friend
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /user/{uuid_user}/game/{uuid_game}:
    post:
      description: add a game to a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_game
          in: path
          description: the uuid of the game to add
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    delete:
      description: remove a game from a user
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_game
          in: path
          description: the uuid of the game to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /user/{uuid_user}/room/{uuid_room}:
    post:
      description: add a room to a User list
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_game
          in: path
          description: the uuid of the room to add
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    delete:
      description: remove a room from a User list
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_game
          in: path
          description: the uuid of the room to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'            
  
  /user/{uuid_user}/block/{uuid_blocked}:
    post:
      description: add a user to a User blocked list
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_blocked
          in: path
          description: the uuid of the user to block
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    delete:
      description: remove a user from a User blocked list
      tags:
        - User
      parameters:
        - name: uuid_user
          in: path
          description: the uuid of the primary user
          required: true
          schema:
            type: string
        - name: uuid_blocked
          in: path
          description: the uuid of the user to unblock
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

#! MESSAGES

  /message:
    post:
      tags:
        - Message
      description: create a message using a body
      requestBody:
        $ref: '#/components/requestBodies/MessageCreation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /message/{uuid_message}:
    get:
      tags:
        - Message
      parameters:
        - name: uuid_message
          in: path
          description: uuid of the requested message
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200MessageData'
    delete:
      tags:
        - Message
      parameters:
        - name: uuid_message
          in: path
          description: uuid of the message to delete
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

    post:
      tags:
        - Message
      requestBody:
        $ref: '#/components/requestBodies/MessageModify'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /message/{uuid_message}/details:
    get:
      tags:
        - Message
      parameters:
        - name: uuid_message
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200MessageData'

  /message/{uuid_message}/reply:
    get:
      tags:
        - Message
      parameters:
        - name: uuid_message
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200MessageData'

  #! ROOM

  /room:
    post:
      tags:
        - Room
      requestBody:
        $ref: '#/components/requestBodies/RoomCreation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
        
  /room/{uuid_room}:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomData'
    delete:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the room to delete
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
  
  /room/{uuid_room}/details:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomDataDetails'
  
  /room/{uuid_room}/owner:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200UserData'
  
  /room/{uuid_room}/owner/details:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200UserDataDetails'
  
  /room/{uuid_room}/roomfeed:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomFeed'
  
  /room/{uuid_room}/roomfeed/{offset}:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: offset
          in: path
          description: offset of the query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomFeedOffset'
  
  /room/{uuid_room}/userfeed/{uuid_user}:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomFeed'
  
  /room/{uuid_room}/userfeed/{uuid_user}/{offset}:
    get:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: uuid_user
          in: path
          description: uuid of the requested user
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
        - name: offset
          in: path
          description: offset of the query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200RoomFeedOffset'
  
  /room/{uuid_room}/rename/{new_name}:
    post:
      tags:
        - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: new_name
          in: path
          description: new name of the room
          required: true
          schema:
            type: string
            example: discussing izanami's ribcage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /room/{uuid_room}/user/{uuid_user}:
    post:
        tags:
          - Room
        parameters:
          - name: uuid_room
            in: path
            description: uuid of the requested room
            required: true
            schema:
              type: string
              example: 22ede912-8867-4e2b-8303-32f5912bd2d1
          - name: uuid_user
            in: path
            description: uuid of the requested user
            required: true
            schema:
              type: string
              example: 6a988430-1076-43f3-998e-52fe808f6162
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Return200Empty'
    delete:
      tags:
          - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: uuid_user
          in: path
          description: uuid of the user to delete
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /room/{uuid_room}/user/{uuid_user}/total:
    delete:
      tags:
          - Room
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        - name: uuid_user
          in: path
          description: uuid of the user to delete
          required: true
          schema:
            type: string
            example: 6a988430-1076-43f3-998e-52fe808f6162
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  #! ROOM

  /game:
    post:
      tags:
        - Game
      requestBody:
        $ref: '#/components/requestBodies/GameCreation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /game/{uuid_game}:
    get:
      tags:
        - Game
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested game
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200GameData'
    post:
      tags:
        - Game
      requestBody:
        $ref: '#/components/requestBodies/GameModify'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'
    
    delete:
      tags:
        - Game
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested game
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Empty'

  /game/{uuid_game}/details:
    get:
      tags:
        - Game
      parameters:
        - name: uuid_room
          in: path
          description: uuid of the requested room
          required: true
          schema:
            type: string
            example: 22ede912-8867-4e2b-8303-32f5912bd2d1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200GameDataDetails'

  /game/query/name/{name_game}:
    get:
      tags:
        - Game
      parameters:
        - name: name_game
          in: path
          description: name of the game to query
          required: true
          schema:
            type: string
            example: "Blazblue: Centralfiction"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200GameData'

  /game/query/studio/{name_studio}:
    get:
      tags:
        - Game
      parameters:
        - name: name_studio
          in: path
          description: name of the studio to query
          required: true
          schema:
            type: string
            example: "ArcSystem Works"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200GameData'
    
  /game/query/genre/name_genre:
    get:
      tags:
        - Game
      parameters:
        - name: name_genre
          in: path
          description: name of the genre to query
          required: true
          schema:
            type: string
            example: "Anime Fighter"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200GameData'

  #! AUTH

  /auth/register:
    post:
      description: Add user using body
      tags:
        - Auth
      requestBody:
        $ref: '#/components/requestBodies/UserRegistration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Login'
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserRegistration400'

  /auth/login:
    post:
      description: Add user using body
      tags:
        - Auth
      requestBody:
        $ref: '#/components/requestBodies/UserRegistration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return200Login'
        '400':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnUserLogin400'


components:
  schemas:

    Return200Empty:
      type: object
      required:
        - username
        - password
        - email
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          default: null
          example: null

    #! USER

    DataUserEX1:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 6a988430-1076-43f3-998e-52fe808f6162
          example: 6a988430-1076-43f3-998e-52fe808f6162
        username:
          type: string
          default: Kentin
          example: Kentin

    DataUserDetailsEX1:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 6a988430-1076-43f3-998e-52fe808f6162
          example: 6a988430-1076-43f3-998e-52fe808f6162
        username:
          type: string
          default: Kentin
          example: Kentin
        email:
          type: string
          default: kentinter@gmail.com
          example: kentinter@gmail.com
        last_connection:
          type: string
          default: 2024-05-10-12:11
          example: 2024-05-10-12:11
        first_connection:
          type: string
          default: 2024-07-30-04:45
          example: 2024-07-30-04:45

    DataUserEX2:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 00c7af57-4ea4-4aa1-83aa-6d7b61f472d3
          example: 00c7af57-4ea4-4aa1-83aa-6d7b61f472d3
        username:
          type: string
          default: TotoSY
          example: TotoSY

    DataUserDetailsEX2:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 00c7af57-4ea4-4aa1-83aa-6d7b61f472d3
          example: 00c7af57-4ea4-4aa1-83aa-6d7b61f472d3
        username:
          type: string
          default: TotoSY
          example: TotoSY
        email:
          type: string
          default: toribashido@gmail.com
          example: toribashido@gmail.com
        last_connection:
          type: string
          default: 2024-01-30-14:25
          example: 2024-01-30-14:25
        first_connection:
          type: string
          default: 2024-04-03-11:32
          example: 2024-04-03-11:32

    Return200UserData:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataUserEX1'

    Return200UserDataDetails:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataUserDetailsEX1'

    ReturnUserFriendList200:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DataUserEX1'
              - $ref: '#/components/schemas/DataUserEX2'

    ReturnUserFavoriteList200:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DataUserEX1'
              - $ref: '#/components/schemas/DataUserEX2'

    ReturnUserGameList200:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataGameEx'

    ReturnUserRoomList200:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRoomEX'

    ReturnUserRegistration400:
      type: object
      required:
        - username
        - password
        - email
      properties:
        code:
          type: number
          default: 400
          example: 400
        status:
          type: string
          default: error in given information (username, password and email is non nullable)
          example: error in given information (username, password and email is non nullable)
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          default: null
          example: null

    ReturnUserLogin400:
      type: object
      required:
        - username
        - password
        - email
      properties:
        code:
          type: number
          default: 400
          example: 400
        status:
          type: string
          default: could not login with the given information
          example: could not login with the given information
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          default: null
          example: null

  #! MESSAGE

    DataMessageEX1:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 22ede912-8867-4e2b-8303-32f5912bd2d1
          example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        content:
          type: string
          default: "@Inspecteur Pandouille guity gear ?"
          example: "@Inspecteur Pandouille guity gear ?"

    DataMessageEX2:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 85831773-0592-409a-a1bc-9b90a2ec1879
          example: 85831773-0592-409a-a1bc-9b90a2ec1879
        content:
          type: string
          default: "The game let me win so many 50/50s I might as well play it"
          example: "The game let me win so many 50/50s I might as well play it"

    DataMessageDetailsEX:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 209230c0-c6df-4972-9a3c-c99e189b2ed0
          example: 209230c0-c6df-4972-9a3c-c99e189b2ed0
        uuid_room:
          type: string
          default: ee05749d-5af1-415a-babb-05d80e68e084
          example: ee05749d-5af1-415a-babb-05d80e68e084
        uuid_user:
          type: string
          default: 6a988430-1076-43f3-998e-52fe808f6162
          example: 6a988430-1076-43f3-998e-52fe808f6162
        content:
          type: string
          default: "@Inspecteur Pandouille guity gear ?"
          example: "@Inspecteur Pandouille guity gear ?"
        uuid_reply:
          type: string
          default: 03cf4ee6-53f4-455b-bb41-1c648f974923
          example: 03cf4ee6-53f4-455b-bb41-1c648f974923
        published:
          type: string
          default: 2024-01-04-21:48
          example: 2024-01-04-21:48

    Return200MessageData:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataMessageEX1'
      
    Return200ReplyData:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataMessageEX1'
  
  #! ROOM

    DataRoomEX:
      type: object
      required:
        - uuid_room
      properties:
        uuid:
          type: string
          default: 22ede912-8867-4e2b-8303-32f5912bd2d1
          example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        title::
          type: string
          default: G@ym3rs
          example: G@ym3rs

    DataRoomDetailsEX:
      type: object
      required:
        - uuid_room
      properties:
        uuid:
          type: string
          default: 22ede912-8867-4e2b-8303-32f5912bd2d1
          example: 22ede912-8867-4e2b-8303-32f5912bd2d1
        title:
          type: string
          default: G@ym3rs
          example: G@ym3rs
        uuid_owner:
          type: string
          default: c0caee95-6951-40e8-997d-26dde569d7d6
          example: c0caee95-6951-40e8-997d-26dde569d7d6
        created_at:
          type: string
          default: 2024-11-14-21:23

    DataRoomFeedEX:
      type: object
      required:
        - uuid_room
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DataMessageEX1'
              - $ref: '#/components/schemas/DataMessageEX2'

    DataRoomFeedOffsetEx:
      type: object
      required:
        - uuid_room
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DataMessageEX2'

    Return200RoomData:
      type: object
      required:
        - uuid_room
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRoomEX'

    Return200RoomDataDetails:
      type: object
      required:
        - uuid_room
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRoomDetailsEX'

    Return200RoomFeed:
      type: object
      required:
        - uuid_room
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRoomFeedEX'

    Return200RoomFeedOffset:
      type: object
      required:
        - uuid_room
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataRoomFeedOffsetEx'

  #! GAME

    DataGameEx:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 60f97de3-4d49-44de-8512-fbcef5fb1075
          example: 60f97de3-4d49-44de-8512-fbcef5fb1075
        username:
          type: string
          default: "BlazBlue: Centralfiction"
          example: "BlazBlue: Centralfiction"

    DataGameExDetailsEx:
      type: object
      required:
        - uuid_user
      properties:
        uuid:
          type: string
          default: 60f97de3-4d49-44de-8512-fbcef5fb1075
          example: 60f97de3-4d49-44de-8512-fbcef5fb1075
        title:
          type: string
          default: "BlazBlue: Centralfiction"
          example: "BlazBlue: Centralfiction"
        series:
          type: string
          default: Blazblue
          example: Blazblue
        studio:
          type: string
          default: ArcSystem Works
          example: ArcSystem Works
        genre:
          type: string
          default: Anime fighter
          example: Anime fighter

    Return200GameData:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataGameEx'

    Return200GameDataDetails:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataGameExDetailsEx'

  #! AUTH

    Return200Login:
      type: object
      required:
        - uuid_user
      properties:
        code:
          type: number
          default: 200
          example: 200
        status:
          type: string
          default: null
          example: null
        request:
          type: string
          default: null
          example: null
        data:
          type: string
          example: 6IWkcZdmizfOrgwaQivZiwpH6CkVUYfFdtkPnhANJNzBfJPU6rwpLKIBahyiNX35

  requestBodies:

    UserRegistration:
      required: true
      description: body used to create a user
      content:
        application/json:
          schema:
            type: object
            required:
              - password
            properties:
              username:
                type: string
                example: Kentin
              password:
                type: string
                example: cZvMPqGzEb3Eu3I4sSoGuZgs9aEdHChI
              email:
                type: string
                example: kentinter@gmail.com

    MessageCreation:
      required: true
      description: body used to create a message
      content:
        application/json:
          schema:
            type: object
            required:
              - uuid_room
              - uuid_user
              - content
            properties:
              uuid_room:
                type: string
                example: 3b422384-51d5-4f65-88b5-e40ea0f5e518
              uuid_user:
                type: string
                example: d7b180f2-0841-4ee1-ba78-8bc6b83c6c48
              content:
                type: string
                example: "Also, the mangas that anime is based off dont repeat as much"
              uuid_reply:
                type: string
                example: 302df3f5-6fb4-41a7-93a5-4b0cd05569e8
    
    MessageModify:
      required: true
      description: body used to modify a message
      content:
        application/json:
          schema:
            type: object
            required:
              - content
            properties:
              content:
                type: string
                example: "You saw what i meant to say, my point stands, despite the typo"

    RoomCreation:
      required: true
      description: body used to create a room
      content:
        application/json:
          schema:
            type: object
            required:
              - uuid_user
              - title
            properties:
              uuid_user:
                type: string
                example: d7b180f2-0841-4ee1-ba78-8bc6b83c6c48
              title:
                type: string
                example: Blazblue with the bros

    GameCreation:
      required: true
      description: body used to create a game
      content:
        application/json:
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
                example: "BlazBlue: Centralfiction"
              series:
                type: string
                example: Blazblue

    GameModify:
      required: true
      description: body used to create a game
      content:
        application/json:
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
                example: "BlazBlue: Centralfiction"
              series:
                type: string
                example: Blazblue
              studio:
                type: string
                example: "ArcSystem Works"
              genre:
                type: string
                example: "Air Dasher"
              desc:
                type: string
                example: "very good game"